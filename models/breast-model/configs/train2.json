{
    "import": [
        "$import glob",
        "$import os",
        "$import ignite",
        "$from monai.losses import CrossEntropyLoss",
        "from scripts.createList import CreateImageLabelList"
    ],
    "output_dir": "./out",
    "device": "$torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')",
    "data": {
        "_target_": "scripts.createList.CreateImageLabelList",
        "filename": "./sample_image_list_FFDM.json"
    },
    "imagelist": "$@data.create_dataset()[0]",
    "labellist": "$@data.create_dataset()[1]",
    "network_def": {
        "_target_": "DenseNet121",
        "spatial_dims": 2,
        "in_channels": 3,
        "out_channels": 4
    },
    "loss": {
        "_target_": "torch.nn.CrossEntropyLoss"
    },
    "optimizer": {
        "_target_": "torch.optim.Adam",
        "params": "$@network.parameters()",
        "lr": 0.001
    },
    "network": "$@network_def.to(@device)",
    "train": {
        "deterministic_transforms": [
            {
                "_target_": "LoadImaged",
                "keys": "image"
            },
            {
                "_target_": "EnsureChannelFirstd",
                "keys": "image"
            },
            {
                "_target_": "ScaleIntensityd",
                "keys": "image",
                "minv": 0.0,
                "maxv": 1.0
            },
            {
                "_target_": "Resized",
                "keys": "image",
                "spatial_size": [
                    299,
                    299
                ]
            }
        ],
        "handlers": [
            {
                "_target_": "ValidationHandler",
                "validator": "@validate#evaluator",
                "epoch_level": true,
                "interval": 5
            },
            {
                "_target_": "StatsHandler",
                "tag_name": "train_loss",
                "output_transform": "$monai.handlers.from_engine(['loss'], first=True)"
            },
            {
                "_target_": "TensorBoardStatsHandler",
                "log_dir": "@output_dir",
                "tag_name": "train_loss",
                "output_transform": "$monai.handlers.from_engine(['loss'], first=True)"
            }
        ]
    },
    "preprocessing": {
        "_target_": "Compose",
        "transforms": "$@train#deterministic_transforms"
    },
    "dataset": {
        "_target_": "CacheDataset",
        "data": "$[{'image': i, 'label': l} for i, l in zip(@imagelist, @labellist)]",
        "transform": "@preprocessing",
        "cache_rate": 1.0,
        "num_workers": 4
    },
    "dataloader": {
        "_target_": "DataLoader",
        "dataset": "@dataset",
        "batch_size": 2,
        "shuffle": true,
        "num_workers": 4
    },
    "inferer": {
        "_target_": "SimpleInferer"
    },
    "postprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "Activationsd",
                "keys": "pred",
                "softmax": true
            },
            {
                "_target_": "AsDiscreted",
                "keys": [
                    "pred",
                    "label"
                ],
                "argmax": [
                    true,
                    false
                ],
                "to_onehot": 2
            }
        ]
    },
    "key_train_metric": {
        "train_accuracy": {
            "_target_": "ignite.metrics.Accuracy",
            "output_transform": "$monai.handlers.from_engine(['pred', 'label'])"
        }
    },
    "trainer": {
        "_target_": "SupervisedTrainer",
        "max_epochs": 200,
        "device": "@device",
        "train_data_loader": "@dataloader",
        "network": "@network",
        "loss": "@loss",
        "optimizer": "@optimizer",
        "postprocessing": "@postprocessing",
        "key_train_metric": "@key_train_metric",
        "train_handlers": "@train#handlers",
        "amp": true
    },
    "validate": {
        "evaluator": {
            "_target_": "SupervisedEvaluator",
            "device": "@device",
            "val_data_loader": "@dataloader",
            "network": "@network",
            "inferer": "@inferer",
            "postprocessing": "@postprocessing",
            "key_val_metric": "@key_train_metric",
            "val_handlers": "@validate#handlers"
        },
        "handlers": [
            {
                "_target_": "CheckpointSaver",
                "validator": "@output_dir",
                "save_dict": {
                    "model": "@network"
                },
                "save_key_metric": true,
                "key_metric_filename": "model.pt"
            },
            {
                "_target_": "StatsHandler",
                "iteration_log": false
            },
            {
                "_target_": "TensorBoardStatsHandler",
                "log_dir": "@output_dir",
                "iteration_log": false
            }
        ]
    }
}
