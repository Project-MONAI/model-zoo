{
    "imports": [
        "$import glob",
        "$import os"
    ],
    "bundle_root": ".",
    "ckpt_dir": "$@bundle_root + '/models'",
    "output_dir": "$@bundle_root + '/eval'",
    "data_list_file_path": "$@bundle_root + '/configs/datalist.json'",
    "device": "$torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')",
    "amp": true,
    "network_def": {
        "_target_": "ResNet",
        "init_filters": 16,
        "in_channels": 1,
        "out_channels": 1
    },
    "network": "$@network_def.to(@device)",
    "preprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "LoadImaged",
                "keys": "image",
                "image_only": false
            },
        ]
    },
    "dataset": {
        "_target_": "Dataset",
        "data": "@test_datalist",
        "transform": "@preprocessing"
    },
    "dataloader": {
        "_target_": "DataLoader",
        "dataset": "@dataset",
        "batch_size": 1,
        "shuffle": true,
        "num_workers": 4
    },
    "postprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "SaveImaged",
                "keys": "depth",
                "meta_keys": "pred_meta_dict",
                "output_dir": "@output_dir",
                "output_postfix": "depth",
                "output_dtype": "float32",
                "resample": false,
                "squeeze_end_dims": true
            }
        ]
    },
    "handlers": [
        {
            "_target_": "CheckpointLoader",
            "load_path": "$@bundle_root + '/models/model.pt'",
            "load_dict": {
                "model": "@network"
            }
        },
        {
            "_target_": "StatsHandler",
            "iteration_log": false
        }
    ],
    "evaluator": {
        "_target_": "SupervisedEvaluator",
        "device": "@device",
        "val_data_loader": "@dataloader",
        "network": "@network",
        "inferer": "@inferer",
        "postprocessing": "@postprocessing",
        "val_handlers": "@handlers",
        "amp": true
    },
    "initialize": [
        "$setattr(torch.backends.cudnn, 'benchmark', True)"
    ],
    "run": [
        "$@evaluator.run()"
    ]
}
