{
    "validate#dataset#cache_rate": 0,
    "validate#postprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "Activationsd",
                "keys": "pred",
                "softmax": true
            },
            {
                "_target_": "AsDiscreted",
                "keys": [
                    "pred",
                    "label"
                ],
                "argmax": [
                    true,
                    false
                ],
                "to_onehot": 4
            },
            {
                "_target_": "ToTensord",
                "keys": [
                    "pred",
                    "label"
                ],
                "device": "@device"
            },
            {
                "_target_": "SaveImaged",
                "_disabled_": true,
                "keys": "pred",
                "meta_keys": "pred_meta_dict",
                "output_dir": "@output_dir",
                "output_ext": ".json"
            }
        ]
    },
    "validate#handlers": [
        {
            "_target_": "CheckpointLoader",
            "load_path": "$@ckpt_dir + '/model.pt'",
            "load_dict": {
                "model": "@network"
            }
        },
        {
            "_target_": "StatsHandler",
            "iteration_log": false
        },
        {
            "_target_": "MetricsSaver",
            "save_dir": "@output_dir",
            "metrics": [
                "val_f1",
                "val_accuracy"
            ],
            "metric_details": [
                "val_f1"
            ],
            "batch_transform": "$monai.handlers.from_engine(['image_meta_dict'])",
            "summary_ops": "*"
        }
    ],
    "evaluating": [
        "$import sys",
        "$sys.path.append(@bundle_root)",
        "$setattr(torch.backends.cudnn, 'benchmark', True)",
        "$import scripts",
        "$monai.data.register_writer('json', scripts.ClassificationWriter)",
        "$@validate#evaluator.run()"
    ]
}
